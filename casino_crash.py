import sqlite3
import json
import random
from requests import get
from telebot import types
from casino_functions import add_deposit, add_balance, check_deposit, add_conclusion, \
    get_conclusion, get_user_balance, get_deposit_amount, get_username, get_boss, add_payment, \
    get_worker_username
from casino_config import bot, get_balance, get_last_popolnenie, get_status, get_referals, get_ref_balance, \
    get_ref_link, get_random_number, get_inf_profil, QIWI_NUMBER, QIWI_TOKEN, admin_1, admin_chat, conclusion_channel, \
    workers_chat, min_deposit, percent
from casino_keyboard import keyboard_osnova, keyboard_nazad, bet_2, bet_3, bet_4, \
    bet_5, del_msg_button, payment_keyboard
from casino_money import _set_bill_id, _create_invoice

start_game = types.InlineKeyboardMarkup(row_width=1)
start_game.add(types.InlineKeyboardButton(text='–Ø –≥–æ—Ç–æ–≤! üòé', callback_data='start'))


# –ö—Ä–∞—à –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç—É
def play_crash(message):
    balance = get_balance(message)
    bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ \n\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance}0‚ÇΩ",
                     reply_markup=keyboard_nazad())
    bot.register_next_step_handler(message, play_crash_2)


# –ö—Ä–∞—à –∏–≥—Ä–∞
def play_crash_2(message):
    balance = get_balance(message)

    if message.text == "üëæ–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É":
        bot.send_message(message.from_user.id, "üòî –û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –í—ã —Ç–∞–∫ –º–∞–ª–æ —Ä–µ—à–∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å üòî",
                         reply_markup=keyboard_osnova())
        from casino_bot import get_text_message
        bot.register_next_step_handler(message, get_text_message)

    elif message.text.isdigit() and int(message.text) >= 0 and balance >= int(message.text):
        stavkas = int(message.text)
        bot.send_message(message.from_user.id,
                         "–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—ç—Ñ–∏—Ü–∏–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É (–û—Ç 2 –¥–æ 30)\n\n–ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–º–Ω–æ–∂–µ–Ω–∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞, –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è. –ï—Å–ª–∏ –í—ã —É—Å–ø–µ–µ—Ç –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞–≤–∫—É –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞—Å—Ç–∏, —Ç–æ –ø–æ–ª—É—á–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è = –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ * –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –í—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ —Å—É–º–º—É, —Ä–∞–≤–Ω—É—é –í–∞—à–µ–π —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(message, play_crash_3, stavkas)

    else:
        bot.send_message(message.from_user.id, "–ù–∞ –í–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
        play_crash(message)


def play_crash_3(message, stavkas):
    if message.text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É":
        bot.send_message(message.from_user.id, "üòî –û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –í—ã —Ç–∞–∫ –º–∞–ª–æ —Ä–µ—à–∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å üòî",
                         reply_markup=keyboard_osnova())
        from casino_bot import get_text_message
        bot.register_next_step_handler(message, get_text_message)

    elif message.text.isdigit() and 30 >= int(message.text) >= 2:
        coefficients = int(message.text)
        bot.send_message(message.from_user.id, "–ü—Ä–∏–º–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ", reply_markup=bet_3())
        bot.register_next_step_handler(message, play_crash_4, stavkas, coefficients)

    else:
        bot.send_message(message.from_user.id, "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        play_crash(message)


def play_crash_4(message, stavkas, coefficients):
    con = sqlite3.connect("dannie_2.db")
    cur = con.cursor()
    status = get_status(message)
    balance = get_balance(message)
    last_popolnenie = get_last_popolnenie(message)
    finish_popolnenie = last_popolnenie * 4.5
    if status != 0 and finish_popolnenie <= balance:
        status = 3
        cur.execute(f"UPDATE users SET status = {status} WHERE id = {message.chat.id}")
        con.commit()
    elif status == 3 and last_popolnenie * 4 >= balance:
        status = 2
        cur.execute(f"UPDATE users SET status = {status} WHERE id = {message.chat.id}")
        con.commit()

    else:
        pass

    bet = message.text

    global stavka
    stavka = stavkas

    global coefficient
    coefficient = coefficients

    if bet == "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ":
        bot.send_message(message.from_user.id, "–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è", reply_markup=start_game)
        bot.send_photo(message.chat.id, get(
            "https://monolitestate.com/assets/images/resources/17226/sm/rabstol-net-quotes-05.jpg").content)

    elif bet == "üëæ–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É":
        bot.send_message(message.from_user.id, "üòî –û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –í—ã —Ç–∞–∫ –º–∞–ª–æ —Ä–µ—à–∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å üòî",
                         reply_markup=keyboard_osnova())
        from casino_bot import get_text_message
        bot.register_next_step_handler(message, get_text_message)


# –û—Ç–≤–µ—Ç—ã
@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    chat_id = call.message.chat.id
    message_id=call.message.message_id
    id = call.message.chat.id
    if chat_id > 0:
        if call.data == "start":
            con = sqlite3.connect("dannie_2.db")
            cur = con.cursor()
            status = get_status(call.message)
            balance = get_balance(call.message)
            last_popolnenie = get_last_popolnenie(call.message)

            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=f'0', )

            if status == 0:
                if coefficient > 25:
                    finite_number = random.choice(range(25, 31))
                    for i in range(1, finite_number + 1):
                        bot.edit_message_text(
                            chat_id=call.message.chat.id,
                            message_id=call.message.message_id,
                            text=f'{i}', )
                    bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                    if coefficient == finite_number:
                        balance = balance - stavka + stavka * coefficient
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)
                    else:
                        balance = balance - stavka
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)

                else:
                    random_number = random.choice(range(2, 5))
                    finite_number = random_number + coefficient
                    for i in range(1, finite_number + 1):
                        bot.edit_message_text(
                            chat_id=call.message.chat.id,
                            message_id=call.message.message_id,
                            text=f'{i}', )
                    bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                    balance = balance - stavka + stavka * coefficient
                    cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                    con.commit()
                    bot.register_next_step_handler(call.message, play_crash)



            elif status == 1:
                balances = balance - stavka + stavka * coefficient
                if balances < (last_popolnenie * 4.9):
                    if coefficient > 25:
                        finite_number = random.choice(range(25, 31))
                        for i in range(1, finite_number + 1):
                            bot.edit_message_text(
                                chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text=f'{i}', )
                        bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                        if coefficient == finite_number:
                            balance = balance - stavka + stavka * coefficient
                            cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                            con.commit()
                            bot.register_next_step_handler(call.message, play_crash)
                        else:
                            balance = balance - stavka
                            cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                            con.commit()
                            bot.register_next_step_handler(call.message, play_crash)
                    else:
                        random_number = random.choice(range(2, 5))
                        finite_number = random_number + coefficient
                        for i in range(1, finite_number + 1):
                            bot.edit_message_text(
                                chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text=f'{i}', )
                        bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                        balance = balance - stavka + stavka * coefficient
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)
                else:
                    if coefficient > 3:
                        random_number = random.choice(range(1, 3))
                        finite_number = coefficient - random_number
                        for i in range(1, finite_number + 1):
                            bot.edit_message_text(
                                chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text=f'{i}', )
                        bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!",
                                         reply_markup=bet_5())
                        balance = balance - stavka
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)
                    else:
                        bot.send_message(call.message.chat.id, "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ 0!", reply_markup=bet_5())
                        balance = balance - stavka
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)



            elif status == 2:
                balances = balance - stavka + stavka * coefficient
                if balances < (last_popolnenie * 4.9):
                    random_number = random.choice(range(1, 4))
                    if random_number == 1:
                        if coefficient > 25:
                            finite_number = random.choice(range(25, 31))
                            for i in range(1, finite_number + 1):
                                bot.edit_message_text(
                                    chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=f'{i}', )
                            bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                            if coefficient == finite_number:
                                balance = balance - stavka + stavka * coefficient
                                cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                                con.commit()
                                bot.register_next_step_handler(call.message, play_crash)
                            else:
                                balance = balance - stavka
                                cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                                con.commit()
                                bot.register_next_step_handler(call.message, play_crash)
                        else:
                            random_number = random.choice(range(2, 5))
                            finite_number = random_number + coefficient
                            for i in range(1, finite_number + 1):
                                bot.edit_message_text(
                                    chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=f'{i}', )
                            bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!", )
                            balance = balance - stavka + stavka * coefficient
                            cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                            con.commit()
                            bot.register_next_step_handler(call.message, play_crash)
                    else:
                        if coefficient > 3:
                            random_number = random.choice(range(1, 3))
                            finite_number = coefficient - random_number
                            for i in range(1, finite_number + 1):
                                bot.edit_message_text(
                                    chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=f'{i}', )
                            bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!",
                                             reply_markup=bet_5())
                            balance = balance - stavka
                            cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                            con.commit()
                            bot.register_next_step_handler(call.message, play_crash)
                        else:
                            bot.send_message(call.message.chat.id, "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ 0!",
                                             reply_markup=bet_5())
                            balance = balance - stavka
                            cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                            con.commit()
                            bot.register_next_step_handler(call.message, play_crash)
                else:
                    if coefficient > 3:
                        random_number = random.choice(range(1, 3))
                        finite_number = coefficient - random_number
                        for i in range(1, finite_number + 1):
                            bot.edit_message_text(
                                chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text=f'{i}', )
                        bot.send_message(call.message.chat.id, f"–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ {finite_number}!",
                                         reply_markup=bet_5())
                        balance = balance - stavka
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)
                    else:
                        bot.send_message(call.message.chat.id, "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ 0!", reply_markup=bet_5())
                        balance = balance - stavka
                        cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                        con.commit()
                        bot.register_next_step_handler(call.message, play_crash)



            elif status == 3:
                bot.send_message(call.message.chat.id, "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ —Ü–∏—Ñ—Ä–µ 0!", reply_markup=bet_5())
                balance = balance - stavka
                cur.execute(f"UPDATE users SET balance = {balance} WHERE id = {call.message.chat.id}")
                con.commit()
                bot.register_next_step_handler(call.message, play_crash)



        elif call.data == "soglashenie":
            bot.delete_message(call.message.chat.id, call.message.message_id)
            balance = get_balance(call.message)
            referals = get_referals(call.message)
            ref_balance = get_ref_balance(call.message)
            ref_link = get_ref_link(call.message)
            random_number = get_random_number(call.message)
            inf_profil = get_inf_profil(balance, referals, ref_balance, ref_link, random_number)
            bot.send_message(call.message.chat.id, f"{inf_profil}", reply_markup=keyboard_osnova())

        elif call.data == "check_payment":
            status = '–û–±—Ä–∞–±–æ—Ç–∫–∞'
            answer, amount = check_deposit(id, QIWI_NUMBER, QIWI_TOKEN, 10)
            if answer:
                if amount >= min_deposit:
                    if amount == get_deposit_amount(id):
                        add_balance(id, amount)
                        balance = get_user_balance(id)
                        bot.send_message(id, f"–í–∞—à –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {balance}‚ÇΩ")
                        bot.send_message(admin_1, f"–ù–∞ –≤–∞—à –∫–∏–≤–∏ –ø–æ—Å—Ç—É–ø–∏–ª –ø–ª–∞—Ç–µ–∂ –Ω–∞ —Å—É–º–º—É: {amount}‚ÇΩ")
                        code = random.randint(1111111, 9999999)
                        worker = get_boss(id)
                        worker_username = get_worker_username(worker)
                        bot.send_message(admin_chat,
                                            f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                            f"üéÖ–í–æ—Ä–∫–µ—Ä: @{worker_username} üéÖ\n"
                                            f"üéÑ–°—É–º–º–∞: {amount}‚ÇΩ üéÑ\n"
                                            f"ID –ú–∞–º–æ–Ω—Ç–∞: {id}\n", reply_markup=payment_keyboard(code))
                        add_payment(worker, amount)
                        add_conclusion(amount, worker_username, id, code)
                        add_deposit(id)
                    else:
                        bot.send_message(id, f"–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ!‚ùå",
                        reply_markup=del_msg_button())
                else:
                    pass
            else:
                bot.send_message(id, f"–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!‚ùå",
                        reply_markup=del_msg_button())
        
        
                                        
        elif call.data == "undo_payment":
            bot.delete_message(chat_id=id, message_id=message_id)
            bot.send_message(id, f"–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω—ë–Ω.")
        
        elif call.data == 'del_msg':
            bot.delete_message(chat_id=id, message_id=message_id)

    else:
        if call.data.startswith("80%"):
            percent = 20
            bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=None)
            status = 'üîÑ–û–±—Ä–∞–±–æ—Ç–∫–∞'
            payment_id = call.data.split(":")[1]
            payment = get_conclusion(payment_id)
            bot.send_message(conclusion_channel,
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n"
                                    f"‚ùÑÔ∏è–î–û–õ–Ø –í–û–†–ö–ï–†–ê: {round(payment[0]-payment[0]/100*percent)}‚ÇΩ ‚ùÑÔ∏è\n"
                                    f"‚úÖ–°–¢–ê–¢–£–°: {status}\n")
            bot.send_message(workers_chat,
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n")

        elif call.data.startswith("70%"):
            bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=None)
            status = 'üîÑ–û–±—Ä–∞–±–æ—Ç–∫–∞'
            percent = 30
            payment_id = call.data.split(":")[1]
            payment = get_conclusion(payment_id)
            bot.send_message(conclusion_channel,
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n"
                                    f"‚ùÑÔ∏è–î–û–õ–Ø –í–û–†–ö–ï–†–ê: {round(payment[0]-payment[0]/100*percent)}‚ÇΩ ‚ùÑÔ∏è\n"
                                    f"‚ùÑÔ∏è(–° –ø–æ–º–æ—â—å—é: @SeniorCasinoSupport 70%)\n"
                                    f"‚úÖ–°–¢–ê–¢–£–°: {status}\n")
            bot.send_message(workers_chat,
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n")


        elif call.data.startswith("x_payment"):
            bot.edit_message_reply_markup(chat_id=chat_id, message_id=message_id, reply_markup=None)
            x = call.data[9:10]
            if x == "2":
                percent = 30
            elif x == "3":
                percent = 40
            else:
                percent = 40
            status = 'üîÑ–û–±—Ä–∞–±–æ—Ç–∫–∞'
            payment_id = call.data.split(":")[1]
            payment = get_conclusion(payment_id)
            bot.send_message(conclusion_channel,
                                    f"üí≥X{x} –û–ü–õ–ê–¢–ê\n"
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n"
                                    f"‚ùÑÔ∏è–î–û–õ–Ø –í–û–†–ö–ï–†–ê: {round(payment[0]-payment[0]/100*percent)}‚ÇΩ ‚ùÑÔ∏è\n"
                                    f"‚úÖ–°–¢–ê–¢–£–°: {status}\n")
            bot.send_message(workers_chat,
                                    f"üí≥X{x} –û–ü–õ–ê–¢–ê\n"
                                    f"üí∞–ú–ê–ú–û–ù–¢ –ü–û–ü–û–õ–ù–ò–õ –ë–ê–õ–ê–ù–°üí∞  \n"
                                    f"üéÖ–í–æ—Ä–∫–µ—Ä: @{payment[2]} üéÖ\n"
                                    f"üéÑ–°—É–º–º–∞: {payment[0]}‚ÇΩ üéÑ\n")
        else:
            pass